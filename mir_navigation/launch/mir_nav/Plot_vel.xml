<?xml version='1.0' encoding='UTF-8'?>
<launch>
   <root>
      <tabbed_widget parent="main_window" name="Main Window">
         <plotmatrix columns="1" tab_name="plot" rows="1">
            <plot row="0" col="0">
            <range left="0.000000" right="1.000000" bottom="0.000000" top="1.000000"/>
            <limitY/>
            <transform value=""/>
            </plot>
         </plotmatrix>
         <currentPlotMatrix index="0"/>
      </tabbed_widget>
      <use_relative_time_offset enabled="1"/>
      <Plugins>
         <DataLoad_CSV>
            <default time_axis=""/>
         </DataLoad_CSV>
         <DataLoad_ROS_bags>
            <selected_topics list=""/>
         </DataLoad_ROS_bags>
         <ROS_Topic_Streamer>
            <selected_topics list=""/>
         </ROS_Topic_Streamer>
         <RosoutPublisherROS/>
         <TopicPublisherROS/>
      </Plugins>
      <customMathEquations/>
      <snippets>
         <snippet name="1st_derivative">
               <global>var prevX = 0
            var prevY = 0</global>
               <equation>dx = time - prevX
            dy = value - prevY
            prevX = time
            prevY = value

            return dy/dx</equation>
         </snippet>
         <snippet name="1st_order_lowpass">
               <global>var prevY = 0
            var alpha = 0.1</global>
               <equation>prevY = alpha * value + (1.-alpha) * prevY

            return prevY</equation>
         </snippet>
         <snippet name="sum_A_B">
            <global></global>
            <equation>return $$PLOT_A$$ + $$PLOT_B$$</equation>
         </snippet>
         <snippet name="yaw_from_quaternion">
            <global>// source: https://en.wikipedia.org/wiki/Conversion_between_quaternions_and_Euler_angles

               function quaternionToYaw(x, y, z, w)
               {
               // yaw (z-axis rotation)
               t1 = 2.0 * (w * z + x * y);
               t2 = 1.0 - 2.0 * (y * y + z * z);
               yaw = Math.atan2(t1, t2);

               return yaw
               }
            </global>
            <equation>return quaternionToYaw($$x$$, $$y$$, $$z$$, $$w$$);</equation>
         </snippet>
      </snippets>
   </root>
</launch>
